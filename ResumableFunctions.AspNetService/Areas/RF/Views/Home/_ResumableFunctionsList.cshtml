@using ResumableFunctions.Handler.UiService.InOuts;
@model FunctionsViewModel
<div class="w3-margin">
    <header class="w3-text-indigo">
        <h2 class="w3-margin-top"><b>Resumable Functions</b></h2>
    </header>
    <div class="w3-container">
        <div class="w3-row-padding w3-margin"
             style="margin-left: -16px !important;margin-right: -16px !important;">
            <div class="w3-col l5">
                <b class="w3-text-indigo">Search</b>
                <input value="@Model.SearchTerm" id="functionSearchTerm" class="w3-input w3-border" type="text" required="" placeholder="Search by Function URN">
            </div>
            <div class="w3-col l3">
                <b class="w3-text-indigo">Service</b>
                <select class="w3-select" name="selectedService" id="selectedService">
                    <option value="" disabled selected>Choose a Service</option>
                    @foreach (var service in Model.Services)
                    {
                        <option value="@service.Id"
                            selected="@(service.Id==Model.SelectedService)">
                            @service.AssemblyName
                        </option>
                    }
                </select>
            </div>
            <div class="w3-col l2">
                <span class="w3-text-light-gray">s</span>
                <input type="button" class="w3-input w3-button w3-indigo" value="Search"
                       onclick="searchFunctions()" />
            </div>
            <div class="w3-col l2">
                <span class="w3-text-light-gray">s</span>
                <input type="button" class="w3-input w3-button w3-indigo" value="Reset"
                       onclick="resetFunctionsView()" />
            </div>
        </div>
        <table class="w3-table-all">
            <thead>
                <tr class="w3-indigo">
                    <th width="45%">Function</th>
                    <th>First Wait</th>
                    <th>InProgress</th>
                    <th>Failed</th>
                    <th>Completed</th>
                    <th width="120">Created</th>
                    <th width="120">Last Updated</th>
                </tr>
            </thead>
            @for (var i = 0; i < Model.Functions.Count; i++)
            {
                var function = Model.Functions[i];

                <tr>
                    <td>
                        <ul>
                            <li>
                                <a target="_blank" href="~/RF/FunctionInstances/AllInstances?functionId=@function.FunctionIdentifier.Id&functionName=@function.FunctionIdentifier.MethodName"
                               class="w3-text-blue">
                                    @function.FunctionIdentifier.RF_MethodUrn
                                    (@(function.Completed + function.Failed + function.InProgress + 1) Instance)
                                </a>
                            </li>
                            <li><b>Method Name: </b>@function.FunctionIdentifier.MethodName #@function.FunctionIdentifier.Id</li>
                            <li><b>Class Name: </b>@function.FunctionIdentifier.ClassName</li>
                            <li><b>Assembly Name: </b>@function.FunctionIdentifier.AssemblyName</li>
                            <li><b>Is Active: </b>@function.FunctionIdentifier.IsActive</li>
                            <li>
                                @if (function.Failed == 0)
                                {
                                    <b class="w3-text-green">No Instances Failed</b>
                                }
                                else
                                {
                                    <b class="w3-text-red">@(function.Failed) Instances Failed</b>
                                }
                            </li>
                        </ul>
                    </td>
                    <td>
                        @if (function.FunctionIdentifier.IsEntryPoint)
                        {
                            @if (function.FirstWait != null)
                            {
                                <span>@function.FirstWait</span>
                            }
                            else
                            {
                                <span class='w3-text-red'>No First Wait Exist</span>
                            }

                        }
                        else
                        {
                            <span class="w3-text-blue-gray">Not an entry point</span>
                        }
                    </td>
                    <td>
                        @(function.InProgress == 0 ? "No" : function.InProgress.ToString())
                    </td>
                    <td>
                        @(function.Failed == 0 ? "No" : function.Failed.ToString())
                    </td>
                    <td>
                        @(function.Completed == 0 ? "No" : function.Completed.ToString())
                    </td>
                    <td>@function.FunctionIdentifier.Created</td>
                    <td>
                        @if (function.FunctionIdentifier.Modified == DateTime.MinValue)
                        {
                            <span>Not Changed</span>
                        }
                        else
                        {
                            <span>@function.FunctionIdentifier.Modified</span>
                        }

                    </td>
                </tr>
            }
        </table>
    </div>
</div>