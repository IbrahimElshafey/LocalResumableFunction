@using ResumableFunctions.Handler.UiService.InOuts;
@using ResumableFunctions.Handler.InOuts
@model FunctionInstanceDetails
@{
    ViewBag.Title = $"Function Instance [{Model.InstanceId}] {Model.FunctionUrn}";
}
<style>
    .function-instance-label {
        display: none !important;
    }
</style>
<div class="w3-container w3-margin">
    <header class="w3-text-blue-gray">
        <h2 class="w3-margin-top">
            <b>
                <span class="w3-text-indigo">@Model.FunctionUrn</span>
                Instance <span class="w3-text-indigo">@Model.InstanceId</span>  Details
            </b>
        </h2>
    </header>
    <header class="w3-text-indigo">
        <h4 class="w3-margin-top"><b>Details</b></h4>
    </header>
    <table class="w3-table">
        <tr>
            <th width="250px"><b>Function Name:</b></th>
            <th>@Model.FunctionName</th>
        </tr>
        <tr>
            <td><b>Status:</b></td>
            <td class="@Model.Status">@Model.Status</td>
        </tr>
        <tr>
            <td><b>State Object:</b></td>
            <td class="jsonContainer">
                <pre class="JsonObject">
                        @Model.InstanceData
                </pre>
            </td>
        </tr>
        <tr>
            <td><b>Creation Date:</b></td>
            <td>@Model.Created</td>
        </tr>
        <tr>
            <td><b>Last Modified:</b></td>
            <td>@Model.Modified</td>
        </tr>
        <tr>
            <td><b>Errors Count:</b></td>
            <td>@Model.ErrorsCount</td>
        </tr>
    </table>
    <br />
    <input class="w3-button w3-indigo" type="button"
           onclick="location.href='/RF/FunctionInstances/AllInstances?functionId=@Model.FunctionId&functionName=@Model.FunctionUrn'"
           value="All Function Intstances" />

    <header class="w3-text-indigo">
        <h4 class="w3-margin-top"><b>Waits Tree</b></h4>
    </header>
    <ul class="w3-ul">
        @foreach (var logItem in Model.Waits)
        {
            @Html.DisplayFor(x => logItem,logItem.GetType().Name)
        }
    </ul>


    <header class="w3-text-indigo">
        <h4 class="w3-margin-top"><b>Log History</b></h4>
    </header>
    @*GetLogs partial*@
    <div class="w3-container">
        <div class="w3-row w3-margin w3-padding">

            <div class="w3-col l2" style="width:300px">
                <input style="accent-color: green;"
                       class="w3-check w3-indigo" type="checkbox" checked="checked" onchange="toggleShow('.log-item-Warning')">
                <label>Hide/Show @Model.Logs.Count(x=>x.Type==LogType.Warning) Warning</label>
            </div>
            <div class="w3-col l2" style="width:300px">
                <input style="accent-color: green;"
                       class="w3-check w3-indigo" type="checkbox" checked="checked" onchange="toggleShow('.log-item-Info')">
                <label>Hide/Show @Model.Logs.Count(x=>x.Type==LogType.Info) Info</label>
            </div>
        </div>
        @if (Model.Logs.Any())
        {
            <div class="w3-margin">
                @foreach (var logItem in Model.Logs)
                {
                    @Html.DisplayFor(x => logItem)
                }
            </div>
        }
        else
        {
            <div class="w3-margin w3-padding-64">
                <h1 class="w3-text-red w3-center">No Logs</h1>
            </div>
        }

    </div>
</div>