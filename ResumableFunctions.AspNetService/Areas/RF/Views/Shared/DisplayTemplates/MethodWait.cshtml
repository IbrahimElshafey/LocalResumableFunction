@using ResumableFunctions.Handler.InOuts.Entities;
@model MethodWaitEntity
<li>
    <div class="w3-card w3-white w3-padding w3-round">
        <h6 class="w3-text-indigo"><b>@Model.Name #@Model.Id</b></h6>
        <table class="w3-ul">
            <tr>
                <td><b class="w3-text-blue-gray">Status: </b></td>
                <td>
                    <span class="@Model.Status">@Model.Status</span>
                    @if (Model.CallId > 0)
                    {
                        <a class="w3-text-blue" target="_blank" href="~/RF/PushedCall/Details?pushedCallId=@Model.CallId">By Call</a>
                    }
                </td>
            </tr>
            @{
                var locals = Model.PrivateDataDisplay();
            }
            @if (locals is not null)
            {
                <tr>
                    <td><b class="w3-text-blue-gray">Locals: </b></td>
                    <td>
                        <pre class="JsonObject">
                            @locals
                        </pre>
                    </td>
                </tr>
            }
            @if (Model.Template != null)
            {
                @Html.DisplayFor(x => x.Template, "TemplateDisplay")
                @if (!string.IsNullOrWhiteSpace(Model.MandatoryPart))
                {
                    <tr>
                        <td><b class="w3-text-blue-gray">Mandatory Part Values: </b></td>
                        <td>@Model.MandatoryPart</td>
                    </tr>
                }
            }
            <tr>
                <td><b class="w3-text-blue-gray">Created: </b></td>
                <td> @Model.Created.ToLocalTime()</td>
            </tr>
            @if (Model.Modified != DateTime.MinValue)
            {
                <tr>
                    <td><b class="w3-text-blue-gray">Modified: </b></td>
                    <td> @Model.Modified.ToLocalTime()</td>
                </tr>
            }
        </table>
    </div>
</li>